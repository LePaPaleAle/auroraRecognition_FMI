Creating a suitable Python environment to a remote computer


Firstly, a suitable Python package manager and Python has to be installed.
I used conda-forge/miniforge for this task, as this makes things relatively
easy, safe and secure. Conda-forge/miniforge can be found from:
https://github.com/conda-forge/miniforge/

The installation process is rather straight forward. In the remote computer folder
where you wish to install python and its packages, input the following commands on the command line:

wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh
bash Miniforge3-Linux-x86_64.sh

After this a virtual conda environment shall be created. This can be done with the following commands:

conda create --name env_name* python=version**
conda activate env_name

*  insert the name you want for the conda environment
** insert the wanted Python version here e.g. 3.9


Note that the installation of the conda environment and creating the virtual environment
might take a surprisingly long time. So just be patient. Also, prepare for errors. One error that
I ran into was a http proxy error:

(base) moisio@crystal:~/Documents/frameExtraction$ conda create --name condaEnvironment python=3.9
Collecting package metadata (current_repodata.json): failed
CondaHTTPError: HTTP 000 CONNECTION FAILED for url <https://conda.anaconda.org/conda-forge/linux-64/current_repodata.json>
Elapsed: -
An HTTP error occurred when trying to retrieve this URL.
HTTP errors are often intermittent, and a simple retry will get you on your way.
'https://conda.anaconda.org/conda-forge/linux-64'

This can be fixed with the following commands on the command line:

conda config
nano .condarc

Now, the Nano text editor should display a text file. If so, append the following lines to the file:

http: http://wwwproxy.fmi.fi:8080
https: http://wwwproxy.fmi.fi:8080

And write out and close the file and you should be good to go.



The packages that are used in the current method are listed underneath.
(Also in a separate file, which can be used for creating the needed virtual environment!)

# This file may be used to create an environment using:
# $ conda create --name <env> --file <this file>
# platform: linux-64
_libgcc_mutex=0.1=conda_forge
_openmp_mutex=4.5=2_gnu
alsa-lib=1.2.6.1=h7f98852_0
aom=3.3.0=h27087fc_1
brotli=1.0.9=h166bdaf_7
brotli-bin=1.0.9=h166bdaf_7
brotlipy=0.7.0=py39hb9d737c_1004
bzip2=1.0.8=h7f98852_4
c-ares=1.18.1=h7f98852_0
ca-certificates=2022.6.15=ha878542_0
cairo=1.16.0=ha12eb4b_1010
certifi=2022.6.15=py39hf3d152e_0
cffi=1.15.0=py39h4bc2ebd_0
charset-normalizer=2.0.12=pyhd8ed1ab_0
colorama=0.4.4=pyh9f0ad1d_0
cryptography=37.0.2=py39hd97740a_0
cycler=0.11.0=pyhd8ed1ab_0
dbus=1.13.6=h5008d03_3
decorator=5.1.1=pyhd8ed1ab_0
expat=2.4.8=h27087fc_0
ffmpeg=4.4.1=hd7ab26d_2
font-ttf-dejavu-sans-mono=2.37=hab24e00_0
font-ttf-inconsolata=3.000=h77eed37_0
font-ttf-source-code-pro=2.038=h77eed37_0
font-ttf-ubuntu=0.83=hab24e00_0
fontconfig=2.14.0=h8e229c2_0
fonts-conda-ecosystem=1=0
fonts-conda-forge=1=0
fonttools=4.33.3=py39hb9d737c_0
freeglut=3.2.2=h9c3ff4c_1
freetype=2.10.4=h0708190_1
gettext=0.19.8.1=h73d1719_1008
giflib=5.2.1=h36c2ea0_2
gmp=6.2.1=h58526e2_0
gnutls=3.6.13=h85f3911_1
graphite2=1.3.13=h58526e2_1001
gst-plugins-base=1.20.2=hf6a322e_1
gstreamer=1.20.2=hd4edc92_1
harfbuzz=4.2.0=h40b6f09_0
hdf5=1.12.1=nompi_h2386368_104
icu=69.1=h9c3ff4c_0
idna=3.3=pyhd8ed1ab_0
imageio=2.19.3=pyhcf75d05_0
imageio-ffmpeg=0.4.7=pyhd8ed1ab_0
jasper=2.0.33=ha77e612_0
jpeg=9e=h166bdaf_1
keyutils=1.6.1=h166bdaf_0
kiwisolver=1.4.2=py39hf939315_1
krb5=1.19.3=h3790be6_0
lame=3.100=h7f98852_1001
lcms2=2.12=hddcbb42_0
ld_impl_linux-64=2.36.1=hea4e1c9_2
leptonica=1.82.0=h950d820_0
lerc=3.0=h9c3ff4c_0
libarchive=3.5.2=hccf745f_1
libblas=3.9.0=14_linux64_openblas
libbrotlicommon=1.0.9=h166bdaf_7
libbrotlidec=1.0.9=h166bdaf_7
libbrotlienc=1.0.9=h166bdaf_7
libcblas=3.9.0=14_linux64_openblas
libclang=13.0.1=default_hc23dcda_0
libcurl=7.83.1=h7bff187_0
libdeflate=1.10=h7f98852_0
libdrm=2.4.109=h7f98852_0
libedit=3.1.20191231=he28a2e2_2
libev=4.33=h516909a_1
libevent=2.1.10=h9b69904_4
libffi=3.4.2=h7f98852_5
libgcc-ng=12.1.0=h8d9b700_16
libgfortran-ng=12.1.0=h69a702a_16
libgfortran5=12.1.0=hdcd56e2_16
libglib=2.70.2=h174f98d_4
libglu=9.0.0=he1b5a44_1001
libgomp=12.1.0=h8d9b700_16
libiconv=1.16=h516909a_0
liblapack=3.9.0=14_linux64_openblas
liblapacke=3.9.0=14_linux64_openblas
libllvm13=13.0.1=hf817b99_2
libnghttp2=1.47.0=h727a467_0
libnsl=2.0.0=h7f98852_0
libogg=1.3.4=h7f98852_1
libopenblas=0.3.20=pthreads_h78a6416_0
libopencv=4.5.5=py39h12858e4_9
libopus=1.3.1=h7f98852_1
libpciaccess=0.16=h516909a_0
libpng=1.6.37=h21135ba_2
libpq=14.3=hd77ab85_0
libprotobuf=3.20.1=h6239696_0
libssh2=1.10.0=ha56f1ee_2
libstdcxx-ng=12.1.0=ha89aaad_16
libtiff=4.4.0=h0fcbabc_0
libuuid=2.32.1=h7f98852_1000
libva=2.14.0=h7f98852_0
libvorbis=1.3.7=h9c3ff4c_0
libvpx=1.11.0=h9c3ff4c_3
libwebp=1.2.2=h3452ae3_0
libwebp-base=1.2.2=h7f98852_1
libxcb=1.13=h7f98852_1004
libxkbcommon=1.0.3=he3ba5ed_0
libxml2=2.9.12=h885dcf4_1
libzlib=1.2.12=h166bdaf_0
lz4-c=1.9.3=h9c3ff4c_1
lzo=2.10=h516909a_1000
matplotlib=3.5.2=py39hf3d152e_0
matplotlib-base=3.5.2=py39h700656a_0
moviepy=1.0.3=pyhd8ed1ab_0
munkres=1.1.4=pyh9f0ad1d_0
mysql-common=8.0.29=haf5c9bc_1
mysql-libs=8.0.29=h28c427c_1
ncurses=6.3=h27087fc_1
nettle=3.6=he412f7d_0
nspr=4.32=h9c3ff4c_1
nss=3.78=h2350873_0
numpy=1.22.4=py39hc58783e_0
opencv=4.5.5=py39hf3d152e_9
openh264=2.1.1=h780b84a_0
openjpeg=2.4.0=hb52868f_1
openssl=1.1.1o=h166bdaf_0
packaging=21.3=pyhd8ed1ab_0
pcre=8.45=h9c3ff4c_0
pillow=9.1.1=py39hae2aec6_1
pip=22.1.1=pyhd8ed1ab_0
pixman=0.40.0=h36c2ea0_0
proglog=0.1.9=py_0
pthread-stubs=0.4=h36c2ea0_1001
py-opencv=4.5.5=py39hef51801_9
pycparser=2.21=pyhd8ed1ab_0
pyopenssl=22.0.0=pyhd8ed1ab_0
pyparsing=3.0.9=pyhd8ed1ab_0
pyqt=5.12.3=py39h03dd644_4
pyqt5-sip=4.19.18=pypi_0
pyqtchart=5.12=pypi_0
pyqtwebengine=5.12.1=pypi_0
pysocks=1.7.1=py39hf3d152e_5
pytesseract=0.3.10=pyhd8ed1ab_0
python=3.9.13=h9a8a25e_0_cpython
python-dateutil=2.8.2=pyhd8ed1ab_0
python_abi=3.9=2_cp39
qt=5.12.9=h1304e3e_6
readline=8.1=h46c0cb4_0
requests=2.28.0=pyhd8ed1ab_0
setuptools=62.3.2=py39hf3d152e_0
six=1.16.0=pyh6c4a22f_0
sqlite=3.38.5=h4ff8645_0
svt-av1=0.9.1=h27087fc_0
tesseract=5.0.1=h84e3e21_0
tk=8.6.12=h27826a3_0
tornado=6.1=py39hb9d737c_3
tqdm=4.64.0=pyhd8ed1ab_0
tzdata=2022a=h191b570_0
unicodedata2=14.0.0=py39hb9d737c_1
urllib3=1.26.9=pyhd8ed1ab_0
wheel=0.37.1=pyhd8ed1ab_0
x264=1!161.3030=h7f98852_1
x265=3.5=h924138e_3
xorg-fixesproto=5.0=h7f98852_1002
xorg-inputproto=2.3.2=h7f98852_1002
xorg-kbproto=1.0.7=h7f98852_1002
xorg-libice=1.0.10=h7f98852_0
xorg-libsm=1.2.3=hd9c2040_1000
xorg-libx11=1.7.2=h7f98852_0
xorg-libxau=1.0.9=h7f98852_0
xorg-libxdmcp=1.1.3=h7f98852_0
xorg-libxext=1.3.4=h7f98852_1
xorg-libxfixes=5.0.3=h7f98852_1004
xorg-libxi=1.7.10=h7f98852_0
xorg-libxrender=0.9.10=h7f98852_1003
xorg-renderproto=0.11.1=h7f98852_1002
xorg-xextproto=7.3.0=h7f98852_1002
xorg-xproto=7.0.31=h7f98852_1007
xz=5.2.5=h516909a_1
zlib=1.2.12=h166bdaf_0
zstd=1.5.2=h8a70e8d_1

